# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input ChangeTaskStatusDTO {
  action: Transitions!
  taskId: Float!
}

input CreateTaskDTO {
  description: String!
  title: String!
}

"""Datos necesarios para registrar un usuario"""
input CreateUserDTO {
  password: String!
  roles: [Role!]!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginInput {
  password: String!
  username: String!
}

type LoginResponse {
  accessToken: String!
}

type Mutation {
  """
  Realiza una accion que cambia el estado de una tarea del usuario autenticado
  """
  changeTaskStatus(input: ChangeTaskStatusDTO!): TaskDTO!

  """Crea una nueva tarea asociada al usuario autenticado"""
  createTask(input: CreateTaskDTO!): TaskDTO!

  """Marca como borrada a una tarea del usuario autenticado"""
  deleteTask(taskId: Float!): Boolean!
  login(input: LoginInput!): LoginResponse!

  """Registra un nuevo usuario con permisos"""
  register(input: CreateUserDTO!): String!
  updateTask(input: UpdateTaskDTO!): TaskDTO!
}

enum OrderDirection {
  ASC
  DESC
}

type Query {
  """
  Obtiene todas las tareas del usuario autenticado con filtros y ordenamiento opcionales
  """
  tasksByUser(filter: TaskFilterInput, order: TaskOrderInput): [TaskDTO!]!

  """
  Obtiene todas las tareas de los usuarios con filtros y ordenamiento opcionales
  """
  tasksForAdmin(filter: TaskFilterInput, order: TaskOrderInput): [TaskDTO!]!
  users: [UserDTO!]!
}

"""User roles"""
enum Role {
  ADMIN
  USER
}

type TaskDTO {
  """Fecha de creacion"""
  createdAt: DateTime!

  """Descripcion"""
  description: String!

  """Id unico de la tarea"""
  id: Float!

  """Estado actual de la tarea"""
  status: String!

  """TÃ­iulo de la tarea"""
  title: String!
}

input TaskFilterInput {
  description: String
  status: TaskStatus
  title: String
  userId: Float
}

input TaskOrderInput {
  createdAt: OrderDirection
  status: OrderDirection
  title: OrderDirection
}

enum TaskStatus {
  CANCELLED
  COMPLETED
  IN_PROGRESS
  PENDING
}

enum Transitions {
  CANCEL
  COMPLETE
  RESET
  START
}

input UpdateTaskDTO {
  description: String
  taskId: Int!
  title: String
}

type UserDTO {
  id: Int!
  roles: [Role!]!
  username: String!
}